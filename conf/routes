# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Login
GET    /login                                                controllers.Application.interfazLogin()
POST   /login                                                controllers.Application.autenticar()

GET    /logout                                               controllers.Application.logout()
GET    /recuperarContrasenia                                 controllers.Application.recuperarContrasenia()

# Home page
GET    /                                                     controllers.Application.index()
GET    /perfil                                               controllers.Application.interfazPerfilUsuario()
#GET    /perfil/editar                   controllers.Application.interfazModificarUsuario()
GET    /perfil/cambiarContrasenia                            controllers.Application.interfazCambiarContrasenia()


#POST   /docentes/nuevo                  controllers.DocenteController.registrarDocente()
#POST   /docentes/actualizar             controllers.DocenteController.actualizarDocente()
#GET    /docentes/eliminar               controllers.DocenteController.eliminarDocente()
GET    /docentes/nuevo                                       controllers.DocenteController.interfazNuevo()
POST   /docentes/registrar                                   controllers.DocenteController.registrarDocente()
POST   /docentes/cambiarContrasenia                          controllers.DocenteController.cambiarContrasenia()

GET    /docentes/problemas/index                             controllers.ProblemaController.index()
GET    /docentes/problemas/lista                             controllers.ProblemaController.list(p:Int ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /docentes/problemas/nuevo                             controllers.ProblemaController.interfazNuevo()
GET    /docentes/problemas/:id                               controllers.ProblemaController.interfazEditar(id:Integer)
POST   /docentes/problemas/registrar                         controllers.ProblemaController.registrarProblema()
POST   /docentes/problemas/:id                               controllers.ProblemaController.actualizarProblema(id:Integer)
POST   /docentes/problemas/:id/delete                        controllers.ProblemaController.eliminarProblema(id:Integer)
GET    /docentes/problemas/ajax/buscar                       controllers.ProblemaController.buscarProblemas(q: String)
POST   /docentes/problemas/render/edicion/:id                controllers.ExamenController.renderPreguntaEdicion(id: Integer)


GET    /docentes/alumnos/index                               controllers.AlumnoController.index()
GET    /docentes/alumnos/lista                               controllers.AlumnoController.list(p:Integer ?= 0, s ?= "dni", o ?= "asc", f ?= "")
GET    /docentes/alumnos/nuevo                               controllers.AlumnoController.interfazNuevo()
POST   /docentes/alumnos/registrar                           controllers.AlumnoController.registrarAlumno()
GET    /docentes/alumnos/:id                                 controllers.AlumnoController.interfazEditar(id:Integer)
POST   /docentes/alumnos/actualizar                          controllers.AlumnoController.actualizarAlumno(id:Integer)
GET    /docentes/alumnos/ajax/buscar                         controllers.AlumnoController.buscarAlumnos(q: String)
GET    /docentes/alumnos/ajax/disponibles                    controllers.AlumnoController.disponibles()

GET    /docentes/gruposexpertos/index                        controllers.GrupoExpertoController.index()
GET    /docentes/gruposexpertos/lista                        controllers.GrupoExpertoController.list(p:Int ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /docentes/gruposexpertos/nuevo                        controllers.GrupoExpertoController.interfazNuevo()
POST   /docentes/gruposexpertos/registrar                    controllers.GrupoExpertoController.registrarGrupoExperto()
GET    /docentes/gruposexpertos/:id/editar                   controllers.GrupoExpertoController.interfazEditar(id:Integer)
POST   /docentes/gruposexpertos/:id/editar                   controllers.GrupoExpertoController.actualizarGrupoExperto(id:Integer)
POST   /docentes/gruposexpertos/:id/delete                   controllers.GrupoExpertoController.eliminarGrupoExperto(id:Integer)
GET    /docentes/gruposexpertos/:id/asignarAlumnos           controllers.GrupoExpertoController.interfazAsignar(id: Integer)
POST   /docentes/gruposexpertos/:id/setAlumnos               controllers.GrupoExpertoController.definirAlumnos(id: Integer)

GET    /docentes/sesionesjigsaw/index                        controllers.SesionJigsawController.index()
GET    /docentes/sesionesjigsaw/lista                        controllers.SesionJigsawController.list(p:Int ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /docentes/sesionesjigsaw/nuevo                        controllers.SesionJigsawController.interfazNuevo()
POST   /docentes/sesionesjigsaw/registrar                    controllers.SesionJigsawController.registrarSesionJigsaw()
GET    /docentes/sesionesjigsaw/:id/editar                   controllers.SesionJigsawController.editarSesionJigsaw(id:Integer)
POST   /docentes/sesionesjigsaw/:id/editar                   controllers.SesionJigsawController.actualizarSesionJigsaw(id:Integer)
POST   /docentes/sesionesjigsaw/:id/delete                   controllers.SesionJigsawController.eliminarSesionJigsaw(id:Integer)
POST   /docentes/sesionesjigsaw/:id/generarGrupos            controllers.SesionJigsawController.generarGrupos(id:Integer)
GET    /docentes/sesionesjigsaw/:id/verGruposExpertos        controllers.SesionJigsawController.verGruposExpertos(id:Integer)
POST   /docentes/sesionesjigsaw/:id/eliminarGruposExpertos   controllers.SesionJigsawController.eliminarGruposExpertos(id:Integer)

GET    /docentes/sesionesjigsaw/:id/asignarAlumnos           controllers.SesionJigsawController.interfazAsignarAlumnos(id: Integer)
POST   /docentes/sesionesjigsaw/:id/guardarAlumnos           controllers.SesionJigsawController.guardarAlumnos(id: Integer)

GET    /docentes/sesionesjigsaw/:id/asignarProblemas         controllers.SesionJigsawController.asignarProblemas(id: Integer)
POST   /docentes/sesionesjigsaw/:id/guardarProblemas         controllers.SesionJigsawController.guardarProblemas(id:Integer)


GET    /docentes/examenes/index                              controllers.ExamenController.index()
GET    /docentes/examenes/lista                              controllers.ExamenController.list(p:Int ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /docentes/examenes/nuevo                              controllers.ExamenController.interfazNuevo()
POST   /docentes/examenes/registrar                          controllers.ExamenController.crearExamen()
GET    /docentes/examenes/:id/editar                         controllers.ExamenController.interfazEditar(id: Integer)
POST   /docentes/examenes/:id/editar                         controllers.ExamenController.guardarExamen(id: Integer)
GET    /docentes/examenes/:id/horario                        controllers.ExamenController.interfazDefinirHorario(id: Integer)
POST   /docentes/examenes/:id/horario                        controllers.ExamenController.definirHorario(id: Integer)
POST   /docentes/examenes/:id/delete                         controllers.ExamenController.eliminarExamen(id: Integer)

GET    /alumnos/examenes/:id/rendir                          controllers.ExamenController.interfazRendir(id: Integer)
GET    /alumnos/examenes/:id/resultados                      controllers.ExamenController.interfazResultados(id: Integer)

#POST   /examenes/:id/finalizarexamen    controllers.ExamenController.finalizarExamen(id: Long)
#GET    /chat                                           controllers.ChatController.index()
#GET    /room                                           controllers.ChatController.chatRoom(username: String ?= null)
GET    /room/chat                                            controllers.ChatController.chat(username:String, chatid: String)
GET    /assets/javascripts/chatroom.js                       controllers.ChatController.chatRoomJs(username:String, chatid:String)

GET    /alumnos                                              controllers.AlumnoController.indexAlumno()
POST   /alumnos/cambiarContrasenia                           controllers.AlumnoController.cambiarContrasenia()
GET    /alumnos/problemas/:id/resolver                       controllers.ProblemaController.interfazResolver(id:Integer)
GET    /alumnos/sesionesjigsaw                               controllers.SesionJigsawController.indexAlumno()
GET    /alumnos/sesiones/lista                               controllers.SesionJigsawController.listForAlumno(p:Integer ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /alumnos/sesiones/:id/faseexpertos                    controllers.SesionJigsawController.interfazFaseExpertos(id: Integer)
GET    /assets/javascripts/firepad.js                        controllers.SesionJigsawController.firepadJs(firepadid:String, userid: String)
GET    /alumnos/ideone/run                                   controllers.ProblemaController.problemaRunJs(source:String, input: String)
GET    /alumnos/ideone/verresultados                         controllers.ProblemaController.verResultadosProblemaRunJs(link:String ?= "")

GET    /alumnos/examenes                                     controllers.ExamenController.indexAlumno()



# The clock EventSource stream
GET    /clockindex                                           controllers.ClockController.index()
GET    /clock                                                controllers.ClockController.liveClock(id:Integer)


# Map static resources from the /public folder to the /assets URL path
GET    /assets/javascripts/routes                            controllers.Application.jsRoutes()
GET    /assets/*file                                         controllers.Assets.at(path="/public", file)



