# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Login
GET    /login                               controllers.Application.interfazLogin()
POST   /login                               controllers.Application.autenticar()
GET    /registrese                          controllers.Docentes.interfazNuevo()
GET    /logout                              controllers.Application.logout()
GET    /recuperarContrasenia                controllers.Application.recuperarContrasenia()

# Home page
GET    /                                    controllers.Application.index()
GET    /perfil                              controllers.Application.interfazPerfilUsuario()
#GET    /perfil/editar                   controllers.Application.interfazModificarUsuario()
GET    /perfil/cambiarContrasenia           controllers.Application.interfazCambiarContrasenia()


#POST   /docentes/nuevo                  controllers.Docentes.registrarDocente()
#POST   /docentes/actualizar             controllers.Docentes.actualizarDocente()
#GET    /docentes/eliminar               controllers.Docentes.eliminarDocente()

POST   /docentes/nuevo                      controllers.Docentes.registrarDocente()
POST   /docentes/cambiarContrasenia         controllers.Docentes.cambiarContrasenia()

GET    /problemas/index                     controllers.Problemas.index()
GET    /problemas                           controllers.Problemas.list(p:Int ?= 0, s ?= "problemaId", o ?= "asc", f ?= "")
GET    /problemas/nuevo                     controllers.Problemas.interfazNuevo()
POST   /problemas/registrar                 controllers.Problemas.registrarProblema()
GET    /problemas/:id                       controllers.Problemas.editarProblema(id:Long)
POST   /problemas/:id                       controllers.Problemas.actualizarProblema(id:Long)
POST   /problemas/:id/delete                controllers.Problemas.eliminarProblema(id:Long)


GET    /alumnos/index                       controllers.Alumnos.index()
GET    /alumnos                             controllers.Alumnos.list(p:Integer ?= 0, s ?= "dni", o ?= "asc", f ?= "")
GET    /alumnos/nuevo                       controllers.Alumnos.interfazNuevo()
POST   /alumnos/registrar                   controllers.Alumnos.registrarAlumno()
GET    /alumnos/:id                         controllers.Alumnos.editarAlumno(id:Integer)
POST   /alumnos/actualizar                  controllers.Alumnos.actualizarAlumno(id:Integer)
GET    /alumnos/buscar                      controllers.Alumnos.buscarAlumnos(q: String)
GET    /alumnos/ajax/disponibles            controllers.Alumnos.disponibles()
POST   /alumnos/cambiarContrasenia          controllers.Alumnos.cambiarContrasenia()

GET    /gruposexpertos/index                controllers.GruposExpertos.index()
GET    /gruposexpertos                      controllers.GruposExpertos.list(p:Int ?= 0, s ?= "grupoExpertoId", o ?= "asc", f ?= "")
GET    /gruposexpertos/nuevo                controllers.GruposExpertos.interfazNuevo()
POST   /gruposexpertos/registrar            controllers.GruposExpertos.registrarGrupoExperto()
GET    /gruposexpertos/:id                  controllers.GruposExpertos.editarGrupoExperto(id:Long)
POST   /gruposexpertos/:id                  controllers.GruposExpertos.actualizarGrupoExperto(id:Long)
POST   /gruposexpertos/:id/delete           controllers.GruposExpertos.eliminarGrupoExperto(id:Long)
GET    /gruposexpertos/:id/asignarAlumnos   controllers.GruposExpertos.interfazAsignar(id: Long)
POST   /gruposexpertos/:id/setAlumnos       controllers.GruposExpertos.definirAlumnos(id: Long)

GET    /sesionesjigsaw/index                controllers.SesionesJigsaw.index()
GET    /sesionesjigsaw                      controllers.SesionesJigsaw.list(p:Int ?= 0, s ?= "id", o ?= "asc", f ?= "")
GET    /sesionesjigsaw/nuevo                controllers.SesionesJigsaw.interfazNuevo()
POST   /sesionesjigsaw/registrar            controllers.SesionesJigsaw.registrarSesionJigsaw()
GET    /sesionesjigsaw/:id                  controllers.SesionesJigsaw.editarSesionJigsaw(id:Integer)
POST   /sesionesjigsaw/:id                  controllers.SesionesJigsaw.actualizarSesionJigsaw(id:Integer)
POST   /sesionesjigsaw/:id/delete           controllers.SesionesJigsaw.eliminarSesionJigsaw(id:Integer)

# Map static resources from the /public folder to the /assets URL path
GET    /assets/javascripts/routes           controllers.Application.jsRoutes()
GET    /assets/*file                        controllers.Assets.at(path="/public", file)